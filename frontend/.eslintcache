[{"C:\\Users\\Saumit\\Shopit\\frontend\\src\\index.js":"1","C:\\Users\\Saumit\\Shopit\\frontend\\src\\store.js":"2","C:\\Users\\Saumit\\Shopit\\frontend\\src\\App.js":"3","C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\cartReducers.js":"4","C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Footer.js":"7","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\Home.js":"8","C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\orderReducers.js":"9","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\product\\ProductDetails.js":"10","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\Cart.js":"11","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\Shipping.js":"12","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Header.js":"13","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Register.js":"14","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\order\\OrderDetails.js":"15","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\Payment.js":"16","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\ConfirmOrder.js":"17","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Profile.js":"18","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\UpdateProfile.js":"19","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Login.js":"20","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\order\\ListOrders.js":"21","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\ForgotPassword.js":"22","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\OrderSuccess.js":"23","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\NewPassword.js":"24","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\UpdatePassword.js":"25","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Wishlist.js":"26","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\ProductsList.js":"27","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\Dashboard.js":"28","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\NewProduct.js":"29","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\ProcessOrder.js":"30","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\OrdersList.js":"31","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\UsersList.js":"32","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\UpdateUser.js":"33","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\ProductReviews.js":"34","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\UpdateProduct.js":"35","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\coupon\\CreateCouponPage.js":"36","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\route\\ProtectedRoute.js":"37","C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\userActions.js":"38","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\MetaData.js":"39","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Loader.js":"40","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\product\\Product.js":"41","C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\cartActions.js":"42","C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\productActions.js":"43","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\Sidebar.js":"44","C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\orderActions.js":"45","C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\cartConstants.js":"46","C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\orderConstants.js":"47","C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\userConstants.js":"48","C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\productConstants.js":"49","C:\\Users\\Saumit\\Shopit\\frontend\\src\\functions\\coupon.js":"50","C:\\Users\\Saumit\\Shopit\\frontend\\src\\functions\\user.js":"51","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\review\\ListReviews.js":"52","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\CheckoutSteps.js":"53","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Search.js":"54"},{"size":589,"mtime":1662101634095,"results":"55","hashOfConfig":"56"},{"size":1734,"mtime":1662101634117,"results":"57","hashOfConfig":"56"},{"size":5696,"mtime":1662101634084,"results":"58","hashOfConfig":"56"},{"size":1107,"mtime":1662101634817,"results":"59","hashOfConfig":"56"},{"size":6961,"mtime":1662101634838,"results":"60","hashOfConfig":"56"},{"size":6373,"mtime":1662101634849,"results":"61","hashOfConfig":"56"},{"size":344,"mtime":1662101634485,"results":"62","hashOfConfig":"56"},{"size":7061,"mtime":1662101634197,"results":"63","hashOfConfig":"56"},{"size":4375,"mtime":1662101634827,"results":"64","hashOfConfig":"56"},{"size":10157,"mtime":1662101634602,"results":"65","hashOfConfig":"56"},{"size":6048,"mtime":1662101634394,"results":"66","hashOfConfig":"56"},{"size":4762,"mtime":1662101634463,"results":"67","hashOfConfig":"56"},{"size":3298,"mtime":1665159363916,"results":"68","hashOfConfig":"56"},{"size":5629,"mtime":1662101634697,"results":"69","hashOfConfig":"56"},{"size":3770,"mtime":1662101634564,"results":"70","hashOfConfig":"56"},{"size":4476,"mtime":1662101634450,"results":"71","hashOfConfig":"56"},{"size":3736,"mtime":1662101634420,"results":"72","hashOfConfig":"56"},{"size":2082,"mtime":1662101634686,"results":"73","hashOfConfig":"56"},{"size":5120,"mtime":1662101634718,"results":"74","hashOfConfig":"56"},{"size":3377,"mtime":1662101634660,"results":"75","hashOfConfig":"56"},{"size":4282,"mtime":1662101634554,"results":"76","hashOfConfig":"56"},{"size":2198,"mtime":1662101634647,"results":"77","hashOfConfig":"56"},{"size":732,"mtime":1662101634436,"results":"78","hashOfConfig":"56"},{"size":2924,"mtime":1662101634675,"results":"79","hashOfConfig":"56"},{"size":2922,"mtime":1662101634708,"results":"80","hashOfConfig":"56"},{"size":1673,"mtime":1662101634728,"results":"81","hashOfConfig":"56"},{"size":3788,"mtime":1662101634258,"results":"82","hashOfConfig":"56"},{"size":5769,"mtime":1662101634210,"results":"83","hashOfConfig":"56"},{"size":6818,"mtime":1662101634219,"results":"84","hashOfConfig":"56"},{"size":6278,"mtime":1662101634239,"results":"85","hashOfConfig":"56"},{"size":3830,"mtime":1662101634229,"results":"86","hashOfConfig":"56"},{"size":3543,"mtime":1662101634347,"results":"87","hashOfConfig":"56"},{"size":4587,"mtime":1662101634334,"results":"88","hashOfConfig":"56"},{"size":5063,"mtime":1662101634248,"results":"89","hashOfConfig":"56"},{"size":9264,"mtime":1662101634319,"results":"90","hashOfConfig":"56"},{"size":5047,"mtime":1662101634372,"results":"91","hashOfConfig":"56"},{"size":920,"mtime":1662101634633,"results":"92","hashOfConfig":"56"},{"size":7420,"mtime":1662101634183,"results":"93","hashOfConfig":"56"},{"size":229,"mtime":1662101634526,"results":"94","hashOfConfig":"56"},{"size":134,"mtime":1662101634510,"results":"95","hashOfConfig":"56"},{"size":1240,"mtime":1662101634582,"results":"96","hashOfConfig":"56"},{"size":1093,"mtime":1662101634153,"results":"97","hashOfConfig":"56"},{"size":5936,"mtime":1662101634172,"results":"98","hashOfConfig":"56"},{"size":1728,"mtime":1662101634270,"results":"99","hashOfConfig":"56"},{"size":3664,"mtime":1662101634163,"results":"100","hashOfConfig":"56"},{"size":150,"mtime":1662101634742,"results":"101","hashOfConfig":"56"},{"size":1160,"mtime":1662101634755,"results":"102","hashOfConfig":"56"},{"size":2213,"mtime":1662101634778,"results":"103","hashOfConfig":"56"},{"size":1905,"mtime":1662101634766,"results":"104","hashOfConfig":"56"},{"size":422,"mtime":1662101634793,"results":"105","hashOfConfig":"56"},{"size":522,"mtime":1662101634803,"results":"106","hashOfConfig":"56"},{"size":714,"mtime":1662101634616,"results":"107","hashOfConfig":"56"},{"size":1844,"mtime":1662101634407,"results":"108","hashOfConfig":"56"},{"size":1013,"mtime":1662101634539,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"hcy00j",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"C:\\Users\\Saumit\\Shopit\\frontend\\src\\index.js",[],["230","231"],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\store.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\App.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\Home.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\Cart.js",["232"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MetaData from '../layout/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions';\nimport { useState } from 'react';\n\nconst Cart = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const { cartItems } = useSelector((state) => state.cart);\n\n  const removeCartItemHandler = (id) => {\n    dispatch(removeItemFromCart(id));\n  };\n\n  const increaseQty = (id, quantity, stock) => {\n    const newQty = quantity + 1;\n\n    if (newQty > stock) return;\n\n    dispatch(addItemToCart(id, newQty));\n  };\n\n  const decreaseQty = (id, quantity) => {\n    const newQty = quantity - 1;\n\n    if (newQty <= 0) return;\n\n    dispatch(addItemToCart(id, newQty));\n  };\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n\n  const applyDiscountCoupon = () => {\n    console.log('send coupon to backend', coupon);\n  };\n\n  const [coupon, setCoupon] = useState('');\n\n  return (\n    <Fragment>\n      <MetaData title={'Your Cart'} />\n      {cartItems.length === 0 ? (\n        <h2 className=\"mt-5\">Your Cart is Empty</h2>\n      ) : (\n        <Fragment>\n          <h2 className=\"mt-5\">\n            Your Cart: <b>{cartItems.length} items</b>\n          </h2>\n\n          <div className=\"row d-flex justify-content-between\">\n            <div className=\"col-12 col-lg-8\">\n              {cartItems.map((item) => (\n                <Fragment>\n                  <hr />\n\n                  <div className=\"cart-item\" key={item.product}>\n                    <div className=\"row\">\n                      <div className=\"col-4 col-lg-3\">\n                        <img\n                          src={item.image}\n                          alt=\"Laptop\"\n                          height=\"90\"\n                          width=\"115\"\n                        />\n                      </div>\n\n                      <div className=\"col-5 col-lg-3\">\n                        <Link to={`/products/${item.product}`}>\n                          {item.name}\n                        </Link>\n                      </div>\n\n                      <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                        <p id=\"card_item_price\">${item.price}</p>\n                      </div>\n\n                      <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                        <div className=\"stockCounter d-inline\">\n                          <span\n                            className=\"btn btn-danger minus\"\n                            onClick={() =>\n                              decreaseQty(item.product, item.quantity)\n                            }\n                          >\n                            -\n                          </span>\n\n                          <input\n                            type=\"number\"\n                            className=\"form-control count d-inline\"\n                            value={item.quantity}\n                            readOnly\n                          />\n\n                          <span\n                            className=\"btn btn-primary plus\"\n                            onClick={() =>\n                              increaseQty(\n                                item.product,\n                                item.quantity,\n                                item.stock\n                              )\n                            }\n                          >\n                            +\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                        <i\n                          id=\"delete_cart_item\"\n                          className=\"fa fa-trash btn btn-danger\"\n                          onClick={() => removeCartItemHandler(item.product)}\n                        ></i>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                </Fragment>\n              ))}\n            </div>\n\n            <div className=\"col-12 col-lg-3 my-4\">\n              <div id=\"order_summary\">\n                <h4>Order Summary</h4>\n                <hr />\n                <p>\n                  Subtotal:{' '}\n                  <span className=\"order-summary-values\">\n                    {cartItems.reduce(\n                      (acc, item) => acc + Number(item.quantity),\n                      0\n                    )}{' '}\n                    (Units)\n                  </span>\n                </p>\n                <p>\n                  Est. total:{' '}\n                  <span className=\"order-summary-values\">\n                    $\n                    {cartItems\n                      .reduce(\n                        (acc, item) => acc + item.quantity * item.price,\n                        0\n                      )\n                      .toFixed(2)}\n                  </span>\n                </p>\n\n                <hr />\n                <button\n                  id=\"checkout_btn\"\n                  className=\"btn btn-primary btn-block\"\n                  onClick={checkoutHandler}\n                >\n                  Check out\n                </button>\n                <hr />\n                <label htmlFor=\"city_field\" className=\"mt-2\">\n                  Got a coupon 🎫?\n                </label>\n                <input\n                  onChange={(e) => setCoupon(e.target.value)}\n                  value={coupon}\n                  type=\"text\"\n                  id=\"city_field\"\n                  className=\"form-control\"\n                />\n                <hr />\n                <button\n                  onClick={applyDiscountCoupon}\n                  id=\"coupon_btn\"\n                  className=\"btn btn-primary btn-block\"\n                >\n                  Apply Coupon\n                </button>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Cart;\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Header.js",["233"],"import React, { Fragment } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { logout } from '../../actions/userActions';\n\nimport Search from './Search';\n\nimport '../../App.css';\n\nconst Header = () => {\n  //TOMORROW BIRTHDAY\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user, loading } = useSelector((state) => state.auth);\n  const { cartItems } = useSelector((state) => state.cart);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    alert.success('Logged out successfully.');\n  };\n\n  return (\n    <Fragment>\n      <nav className=\"navbar row\">\n        <div className=\"col-12 col-md-3\">\n          <div className=\"navbar-brand\">\n            <Link to=\"/\">\n              <img src=\"/images/shopit_logo.png\" />\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n          <Route render={({ history }) => <Search history={history} />} />\n        </div>\n\n        <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n          <Link to=\"/cart\" style={{ textDecoration: 'none' }}>\n            <span id=\"cart\" className=\"ml-3\">\n              Cart\n            </span>\n            <span className=\"ml-1\" id=\"cart_count\">\n              {cartItems.length}\n            </span>\n          </Link>\n\n          {user ? (\n            <div className=\"ml-4 dropdown d-inline\">\n              <Link\n                to=\"#!\"\n                className=\"btn dropdown-toggle text-white mr-4\"\n                type=\"button\"\n                id=\"dropDownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <figure className=\"avatar avatar-nav\">\n                  <img\n                    src={user.avatar && user.avatar.url}\n                    alt={user && user.name}\n                    className=\"rounded-circle\"\n                  />\n                </figure>\n                <span>{user && user.name}</span>\n              </Link>\n\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropDownMenuButton\"\n              >\n                {user && user.role === 'admin' && (\n                  <Link className=\"dropdown-item\" to=\"/dashboard\">\n                    Dashboard\n                  </Link>\n                )}\n                <Link className=\"dropdown-item\" to=\"/orders/me\">\n                  Orders\n                </Link>\n                <Link className=\"dropdown-item\" to=\"/me\">\n                  Profile\n                </Link>\n                <Link className=\"dropdown-item\" to=\"/me/wishlist\">\n                  Wishlist\n                </Link>\n                <Link\n                  className=\"dropdown-item text-danger\"\n                  to=\"/\"\n                  onClick={logoutHandler}\n                >\n                  Logout\n                </Link>\n              </div>\n            </div>\n          ) : (\n            !loading && (\n              <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">\n                Login\n              </Link>\n            )\n          )}\n        </div>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Register.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\Payment.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\UpdateProfile.js",["234"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Login.js",["235"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\order\\ListOrders.js",["236","237"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  PDFDownloadLink,\n  PDFViewer,\n} from '@react-pdf/renderer';\n\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myOrders, clearErrors } from '../../actions/orderActions';\n\nconst ListOrders = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, orders } = useSelector((state) => state.myOrders);\n\n  useEffect(() => {\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const setOrders = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Order ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Num of Items',\n          field: 'numOfItems',\n          sort: 'asc',\n        },\n        {\n          label: 'Amount',\n          field: 'amount',\n          sort: 'asc',\n        },\n        {\n          label: 'Status',\n          field: 'status',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc',\n        },\n      ],\n      rows: [],\n    };\n\n    const showDownloadLink = (order) => (\n      <PDFDownloadLink\n        document={\n          <Document>\n            <Page style={styles.body}>\n              <Text style={styles.header} fixed>\n                ~ {new Date().toLocaleString()} ~\n              </Text>\n              <Text style={styles.title}>Order Invoice</Text>\n              <Text style={styles.author}>Shopit Ecommerce</Text>\n              <Text style={styles.subtitle}>Order Summary</Text>\n              <Text>Total Paid- ${order.totalPrice}</Text>\n              <Text>Order id - {order._id}</Text>\n              <Text>Order Status- {order.orderStatus}</Text>\n            </Page>\n          </Document>\n        }\n        fileName=\"invoice.pdf\"\n      >\n        <button className=\"btn btn-success py-1 px-2 ml-2\">\n          <i className=\"fa fa-file-text\"></i>\n        </button>\n      </PDFDownloadLink>\n    );\n\n    orders.forEach((order) => {\n      data.rows.push({\n        id: order._id,\n        numOfItems: order.orderItems.length,\n        amount: `$${order.totalPrice}`,\n        status:\n          order.orderStatus &&\n          String(order.orderStatus).includes('Delivered') ? (\n            <p style={{ color: 'green' }}>{order.orderStatus}</p>\n          ) : (\n            <p style={{ color: 'red' }}>{order.orderStatus}</p>\n          ),\n        actions: (\n          <Fragment>\n            <Link\n              to={`/order/${order._id}`}\n              className=\"btn btn-primary py-1 px-2 ml-2\"\n            >\n              <i className=\"fa fa-eye\"></i>\n            </Link>\n            {showDownloadLink(order)}\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'My Orders'} />\n\n      <h1 className=\"my-5\">My Orders</h1>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <MDBDataTable\n          data={setOrders()}\n          className=\"px-3\"\n          bordered\n          striped\n          hover\n        />\n      )}\n    </Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  author: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: 'justify',\n  },\n  image: {\n    marginVertical: 15,\n    marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  footer: {\n    padding: '100px',\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    color: 'grey',\n  },\n});\n\nexport default ListOrders;\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\ForgotPassword.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\user\\Wishlist.js",["238","239","240","241"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getWishlist, removeWishlist } from '../../functions/user';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useAlert } from 'react-alert';\n\nconst Wishlist = () => {\n  const [wishlist, setWishlist] = useState([]);\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadWishlist();\n  }, []);\n\n  const loadWishlist = () =>\n    getWishlist(user.token).then((res) => {\n      setWishlist(res.data.wishlist);\n    });\n\n  const handleRemove = (productId) =>\n    removeWishlist(productId, user.token).then((res) => {\n      loadWishlist();\n      alert.success('Product removed from wishlist');\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={'My Wislist'} />\n      <div className=\"col\">\n        <h3 className=\"text-center\">My Wishlist </h3>\n\n        {wishlist.map((p) => (\n          <div key={p._id} className=\"alert alert-secondary\">\n            <div>\n              {p.name}\n              <Link\n                to={`/product/${p._id}`}\n                className=\"btn btn-primary py-1 px-2 float-right\"\n              >\n                <i className=\"fa fa-eye\"></i>\n              </Link>\n              <button\n                onClick={() => handleRemove(p._id)}\n                className=\"btn btn-danger py-1 px-2 float-right mr-2\"\n              >\n                <i className=\"fa fa-trash\"></i>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Wishlist;\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\NewProduct.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\OrdersList.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\ProductReviews.js",["242"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\coupon\\CreateCouponPage.js",["243","244"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MetaData from '../../layout/MetaData';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../Sidebar';\nimport { useAlert } from 'react-alert';\nimport DatePicker from 'react-datepicker';\nimport { MDBDataTable } from 'mdbreact';\nimport {\n  getCoupons,\n  removeCoupon,\n  createCoupon,\n} from '../../../functions/coupon';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst CreateCouponPage = () => {\n  const [name, setName] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [discount, setDiscount] = useState('');\n  const [loading, setLoading] = useState('');\n  const [coupons, setCoupons] = useState([]);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    getCoupons().then((res) => setCoupons(res.data));\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    // console.table(name, expiry, discount);\n    createCoupon({ name, expiry, discount }, user.token)\n      .then((res) => {\n        setLoading(false);\n        getCoupons().then((res) => setCoupons(res.data));\n\n        setName('');\n        setDiscount('');\n        setExpiry('');\n        alert.success(`coupon \"${res.data.name}\" is created`);\n      })\n      .catch((err) => console.log('create coupon error', err));\n  };\n\n  const handleRemove = (couponId) => {\n    if (window.confirm('Delete?')) {\n      setLoading(true);\n      removeCoupon(couponId, user.token).then((res) => {\n        getCoupons().then((res) => setCoupons(res.data));\n        setLoading(false);\n        alert.info(`Coupon \"${res.data.name}\" is deleted`);\n      });\n    }\n  };\n\n  const alert = useAlert();\n  <MetaData title={'Maneg coupons'} />;\n\n  const setAllCoupons = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Order ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc',\n        },\n        {\n          label: 'Discount %',\n          field: 'discount',\n          sort: 'asc',\n        },\n        {\n          label: 'Expiry',\n          field: 'expiry',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    coupons.forEach((coupon) => {\n      data.rows.push({\n        id: coupon._id,\n        name: coupon.name,\n        discount: coupon.discount,\n        expiry: coupon.expiry,\n        actions: (\n          <Fragment>\n            <button\n              onClick={() => handleRemove(coupon._id)}\n              className=\"btn btn-danger py-1 px-2 ml-2\"\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\" col-md-2\">\n          <Sidebar />\n        </div>\n        <div className=\"col-md-10\">\n          {loading ? (\n            <h3 className=\"text-danger\"> Loading ....</h3>\n          ) : (\n            <h3 className=\"text-center\"> Create Coupon</h3>\n          )}\n          <hr />\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name_field\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name_field\"\n                className=\"form-control\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name_field\">Discount %</label>\n              <input\n                type=\"text\"\n                id=\"name_field\"\n                className=\"form-control\"\n                value={discount}\n                onChange={(e) => setDiscount(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"name_field\">Expiry</label>\n              <br />\n              <DatePicker\n                className=\"form-control\"\n                selected={new Date()}\n                value={expiry}\n                onChange={(date) => setExpiry(date)}\n              />\n            </div>\n\n            <button\n              id=\"coupon_save_btn\"\n              type=\"submit\"\n              style={{\n                backgroundColor: ' #fa9c23',\n                borderRadius: '2rem',\n                border: 'none',\n                color: 'white',\n                padding: '0.5rem 2rem',\n              }}\n            >\n              Save\n            </button>\n          </form>\n\n          <br />\n\n          <h4 className=\"text-center\">{coupons.length} Coupons</h4>\n\n          <MDBDataTable\n            data={setAllCoupons()}\n            className=\"px-3\"\n            bordered\n            striped\n            hover\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateCouponPage;\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\product\\Product.js",["245"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\productActions.js",["246"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\functions\\coupon.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\functions\\user.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\review\\ListReviews.js",[],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],["247","248"],"C:\\Users\\Saumit\\Shopit\\frontend\\src\\components\\layout\\Search.js",[],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":6,"column":10,"nodeType":"255","messageId":"256","endLine":6,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":31,"column":15,"nodeType":"259","endLine":31,"endColumn":52},{"ruleId":"260","severity":1,"message":"261","line":47,"column":8,"nodeType":"262","endLine":47,"endColumn":52,"suggestions":"263"},{"ruleId":"260","severity":1,"message":"264","line":34,"column":8,"nodeType":"262","endLine":34,"endColumn":58,"suggestions":"265"},{"ruleId":"253","severity":1,"message":"266","line":8,"column":3,"nodeType":"255","messageId":"256","endLine":8,"endColumn":7},{"ruleId":"253","severity":1,"message":"267","line":11,"column":3,"nodeType":"255","messageId":"256","endLine":11,"endColumn":12},{"ruleId":"253","severity":1,"message":"268","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":14},{"ruleId":"253","severity":1,"message":"269","line":6,"column":23,"nodeType":"255","messageId":"256","endLine":6,"endColumn":34},{"ruleId":"253","severity":1,"message":"254","line":8,"column":10,"nodeType":"255","messageId":"256","endLine":8,"endColumn":18},{"ruleId":"260","severity":1,"message":"270","line":16,"column":6,"nodeType":"262","endLine":16,"endColumn":8,"suggestions":"271"},{"ruleId":"253","severity":1,"message":"268","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":14},{"ruleId":"253","severity":1,"message":"269","line":2,"column":23,"nodeType":"255","messageId":"256","endLine":2,"endColumn":34},{"ruleId":"253","severity":1,"message":"272","line":4,"column":10,"nodeType":"255","messageId":"256","endLine":4,"endColumn":14},{"ruleId":"257","severity":1,"message":"258","line":8,"column":17,"nodeType":"259","endLine":11,"endColumn":19},{"ruleId":"253","severity":1,"message":"273","line":30,"column":5,"nodeType":"255","messageId":"256","endLine":30,"endColumn":24},{"ruleId":"249","replacedBy":"274"},{"ruleId":"251","replacedBy":"275"},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'useAlert' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["278"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["279"],"'View' is defined but never used.","'PDFViewer' is defined but never used.","'Loader' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["280"],"'Link' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.",["276"],["277"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"287","text":"288"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"289","text":"290"},"Update the dependencies array to be: [loadWishlist]",{"range":"291","text":"292"},[1319,1363],"[dispatch, alert, error, history, isUpdated, user]",[914,964],"[dispatch, alert, isAuthenticated, error, history, redirect]",[529,531],"[loadWishlist]"]